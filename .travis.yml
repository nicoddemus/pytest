language: python
dist: xenial
stages:
- baseline
- name: test
  if: repo = pytest-dev/pytest AND tag IS NOT present
- name: deploy
  if: repo = nicoddemus/pytest AND tag IS present
python: '3.7'
cache: false

# token to upload github release notes
env:
  global:
    - PYTEST_ADDOPTS=-vv

# setuptools-scm needs all tags in order to obtain a proper version
git:
  depth: false

install:
  - python -m pip install --upgrade --pre tox

jobs:
  include:
    # OSX tests - first (in test stage), since they are the slower ones.
    - os: osx
      osx_image: xcode10.1
      language: generic
      env: TOXENV=py37-xdist PYTEST_COVERAGE=1
      before_install:
        - which python3
        - python3 -V
        - ln -sfn "$(which python3)" /usr/local/bin/python
        - python -V
        - test $(python -c 'import sys; print("%d%d" % sys.version_info[0:2])') = 37

    # Full run of latest supported version, without xdist.
    - env: TOXENV=py37
      python: '3.7'

    # Coverage tracking is slow with pypy, skip it.
    - env: TOXENV=pypy3-xdist
      python: 'pypy3'

    - env: TOXENV=py35-xdist
      python: '3.5'

    # Coverage for:
    # - pytester's LsofFdLeakChecker
    # - TestArgComplete (linux only)
    # - numpy
    # Empty PYTEST_ADDOPTS to run this non-verbose.
    - env: TOXENV=py37-lsof-numpy-twisted-xdist PYTEST_COVERAGE=1 PYTEST_ADDOPTS=

    # Specialized factors for py37.
    # Coverage for:
    # - test_sys_breakpoint_interception (via pexpect).
    - env: TOXENV=py37-pexpect PYTEST_COVERAGE=1
    - env: TOXENV=py37-pluggymaster-xdist
    - env: TOXENV=py37-freeze

    - env: TOXENV=py38-xdist
      python: '3.8-dev'

    - stage: baseline
      env: TOXENV=py36-xdist
      python: '3.6'
    - env: TOXENV=linting,docs,doctesting PYTEST_COVERAGE=1
      cache:
        directories:
          - $HOME/.cache/pre-commit

    - stage: deploy
      python: '3.6'
      install: pip install -U setuptools setuptools_scm tox
      script: skip
      env:
        # used by publish_gh_release_notes
        - secure: "wp8cGo3EzHFuXPz34QVk3kuQhHSU5KmwisWAJjLNW+9TNKftjaf10FiWB0LAYU1DVA2xL7/dBQAEmFbaAzggQlsKcpzSEuuaNlJEaDBZY49g8bEerzUxU6hF8CPU1IYc2ZCB8zVVhoEjAjWkVPvPqIfmPl4wHqnLK5OLElCDtP2zHZpm77aXvzY/FxYd8fUz4Znnx8JGLMotFd9tyiuhcKG7dCRYcK/D3ZzjSPt3YAwMRv0oIhKJyim29e92Q3ENfsdvLToCGLIq3HlIw4ZudJCsOsP3DE/2azoyRrcBT032zjEhXh5JgsQfTQB+TmJ5LJX4hOrNS+WcNn0fvHL8M63+ajOGDtJ2Wq2DBRyVmE9urW/ACgpWkBzaDWnt1aovjghI4hYdVlEcseZ2aafiK3hPegk5nEz41m1gPKgtY0goKKzYIIUHGzBhsM0eeyQgYjBAp8EHEvwdW7Nu5m5DiPjAOXi1ZcpCOIvucv/idQBeHJt77htuCmi36GnOqvCJeUeE21Uim6vsQugtVDvfCZnQKirvZ9Dqr4VpJsUyQ+EknpTrf/8I39LbVNZcU3PYVifR/U+38NL9pTDELB1lwQ+TFV2n1HXQpmL8hcEyb5Ya6VGODpIwruRW/b38Ayyn6SpGl0jI9Ec3GbLT4An2f2raHS/uZs9/iBFItPoKUAw="
      addons:
        # required by publish_gh_release_notes
        apt:
          packages:
            - pandoc
      after_deploy: tox -e publish_gh_release_notes
      deploy:
        provider: pypi
        user: nicoddemus
        distributions: sdist bdist_wheel
        skip_upload_docs: true
        password:
          secure: xanTgTUu6XDQVqB/0bwJQXoDMnU5tkwZc5koz6mBkkqZhKdNOi2CLoC1XhiSZ+ah24l4V1E0GAqY5kBBcy9d7NVe4WNg4tD095LsHw+CRU6/HCVIFfyk2IZ+FPAlguesCcUiJSXOrlBF+Wj68wEvLoK7EoRFbJeiZ/f91Ww1sbtDlqXABWGHrmhPJL5Wva7o7+wG7JwJowqdZg1pbQExsCc7b53w4v2RBu3D6TJaTAzHiVsW+nUSI67vKI/uf+cR/OixsTfy37wlHgSwihYmrYLFls3V0bSpahCim3bCgMaFZx8S8xrdgJ++PzBCof2HeflFKvW+VCkoYzGEG4NrTWJoNz6ni4red9GdvfjGH3YCjAKS56h9x58zp2E5rpsb/kVq5/45xzV+dq6JRuhQ1nJWjBC6fSKAc/bfwnuFK3EBxNLkvBssLHvsNjj5XG++cB8DdS9wVGUqjpoK4puaXUWFqy4q3S9F86HEsKNgExtieA9qNx+pCIZVs6JCXZNjr0I5eVNzqJIyggNgJG6RyravsU35t9Zd9doL5g4Y7UKmAGTn1Sz24HQ4sMQgXdm2SyD8gEK5je4tlhUvfGtDvMSlstq71kIn9nRpFnqB6MFlbYSEAZmo8dGbCquoUc++6Rum208wcVbrzzVtGlXB/Ow9AbFMYeAGA0+N/K1e59c=
        on:
          tags: true
          repo: nicoddemus/pytest

matrix:
  allow_failures:
    - python: '3.8-dev'
      env: TOXENV=py38-xdist

before_script:
  - |
    # Do not (re-)upload coverage with cron runs.
    if [[ "$TRAVIS_EVENT_TYPE" = cron ]]; then
      PYTEST_COVERAGE=0
    fi
  - |
    if [[ "$PYTEST_COVERAGE" = 1 ]]; then
      export COVERAGE_FILE="$PWD/.coverage"
      export COVERAGE_PROCESS_START="$PWD/.coveragerc"
      export _PYTEST_TOX_COVERAGE_RUN="coverage run -m"
      export _PYTEST_TOX_EXTRA_DEP=coverage-enable-subprocess
    fi

script: tox

after_success:
  - |
    if [[ "$PYTEST_COVERAGE" = 1 ]]; then
      env CODECOV_NAME="$TOXENV-$TRAVIS_OS_NAME" scripts/report-coverage.sh
    fi

notifications:
  irc:
    channels:
      - "chat.freenode.net#pytest"
    on_success: change
    on_failure: change
    skip_join: true
  email:
    - pytest-commit@python.org
